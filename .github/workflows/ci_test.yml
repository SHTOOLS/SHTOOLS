name: Continuous Integration Tests

on:
  push:  # REMOVE LATER -- REMOVE LATER
  pull_request:
    branches: [master, develop]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.9', '3.12']

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 250
        fetch-tags: true

    - name: Install libraries for Ubuntu
      shell: bash -l {0}
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        apt-get update && apt-get install libfftw3-dev libblas-dev liblapack-dev g++ gfortran tcsh gmt -y

    - name: Install libraries for macOS
      shell: bash -l {0}
      if: ${{ matrix.os == 'macos-latest' }}
      run: |
        brew reinstall gcc fftw lapack gmt

    - name: Install libraries for Windows
      if: ${{ matrix.os == 'windows-latest' }}
      shell: bash -l {0}
      run: |
        echo 'PATH=$PATH:"C:\\msys64\\ucrt64\\bin"' >> $GITHUB_ENV
        echo 'MSYSTEM="UCRT64"' >> $GITHUB_ENV
        C:\\msys64\\usr\\bin\\bash.exe -lc "pacman --noconfirm -Syu"
        C:\\msys64\\usr\\bin\\bash.exe -lc "pacman --noconfirm -S mingw-w64-ucrt-x86_64-gcc-fortran mingw-w64-ucrt-x86_64-openblas mingw-w64-ucrt-x86_64-cmake mingw-w64-ucrt-x86_64-fftw"

    - name: Build using pip
      shell: bash -l {0}
      run: |
        pip install .[cartopy,pygmt,palettable,ducc]

    - name: Run tests
      shell: bash -l {0}
      run: |
        python examples/notebooks/test_notebooks.py
        export MPLBACKEND=Agg
        make -C examples/python -f Makefile no-timing
        mkdir empty && cd empty
        python -c "import pyshtools"
